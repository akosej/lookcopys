{"version":3,"file":"static/js/685.3cc0a2d0.chunk.js","mappings":"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","sources":["ui-component/cards/MainCard.js","ui-component/cards/Skeleton/EarningCard.js","views/dashboard/Default/chart-data/total-order-month-line-chart.js","views/dashboard/Default/TotalOrderLineChartCard.js","views/dashboard/Default/Table.js","ui-component/cards/Skeleton/TotalIncomeCard.js","views/dashboard/Default/TotalIncomeDarkCard.js","views/dashboard/Default/TotalIncomeLightCard.js","views/dashboard/Default/index.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@mui/material';\n\n// constant\nconst headerSX = {\n    '& .MuiCardHeader-action': { mr: 0 }\n};\n\n// ==============================|| CUSTOM MAIN CARD ||============================== //\n\nconst MainCard = forwardRef(\n    (\n        {\n            border = true,\n            boxShadow,\n            children,\n            content = true,\n            contentClass = '',\n            contentSX = {},\n            darkTitle,\n            secondary,\n            shadow,\n            sx = {},\n            title,\n            ...others\n        },\n        ref\n    ) => {\n        const theme = useTheme();\n\n        return (\n            <Card\n                ref={ref}\n                {...others}\n                sx={{\n                    border: border ? '1px solid' : 'none',\n                    borderColor: theme.palette.primary[200] + 75,\n                    ':hover': {\n                        boxShadow: boxShadow ? shadow || '0 2px 14px 0 rgb(32 40 45 / 8%)' : 'inherit'\n                    },\n                    ...sx\n                }}\n            >\n                {/* card header and action */}\n                {!darkTitle && title && <CardHeader sx={headerSX} title={title} action={secondary} />}\n                {darkTitle && title && (\n                    <CardHeader sx={headerSX} title={<Typography variant=\"h3\">{title}</Typography>} action={secondary} />\n                )}\n\n                {/* content & header divider */}\n                {title && <Divider />}\n\n                {/* card content */}\n                {content && (\n                    <CardContent sx={contentSX} className={contentClass}>\n                        {children}\n                    </CardContent>\n                )}\n                {!content && children}\n            </Card>\n        );\n    }\n);\n\nMainCard.propTypes = {\n    border: PropTypes.bool,\n    boxShadow: PropTypes.bool,\n    children: PropTypes.node,\n    content: PropTypes.bool,\n    contentClass: PropTypes.string,\n    contentSX: PropTypes.object,\n    darkTitle: PropTypes.bool,\n    secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\n    shadow: PropTypes.string,\n    sx: PropTypes.object,\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\n};\n\nexport default MainCard;\n","// material-ui\nimport { Card, CardContent, Grid } from '@mui/material';\nimport Skeleton from '@mui/material/Skeleton';\n\n// ==============================|| SKELETON - EARNING CARD ||============================== //\n\nconst EarningCard = () => (\n    <Card>\n        <CardContent>\n            <Grid container direction=\"column\">\n                <Grid item>\n                    <Grid container justifyContent=\"space-between\">\n                        <Grid item>\n                            <Skeleton variant=\"rectangular\" width={44} height={44} />\n                        </Grid>\n                        <Grid item>\n                            <Skeleton variant=\"rectangular\" width={34} height={34} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item>\n                    <Skeleton variant=\"rectangular\" sx={{ my: 2 }} height={40} />\n                </Grid>\n                <Grid item>\n                    <Skeleton variant=\"rectangular\" height={30} />\n                </Grid>\n            </Grid>\n        </CardContent>\n    </Card>\n);\n\nexport default EarningCard;\n","// ===========================|| DASHBOARD - TOTAL ORDER MONTH CHART ||=========================== //\n\nconst chartData = {\n    type: 'line',\n    height: 300,\n    options: {\n        dataLabels: {\n            enabled: false\n        },\n        stroke: {\n            width: [3, 2, 2]\n        },\n        title: {\n            text: 'Estadisticas de las copias de la semana',\n            align: 'left',\n            offsetX: 0\n        },\n        colors: ['#5E35B1', '#FB732A', '#17C0AF'],\n        xaxis: {\n            categories: ['Lunes', 'Martes', 'Miercoles', 'Jueves', 'Viernes', 'Sabado', 'Domingo']\n        },\n        yaxis: [\n            {\n                axisTicks: {\n                    show: true\n                },\n                axisBorder: {\n                    show: true,\n                    color: '#5E35B1'\n                },\n                labels: {\n                    style: {\n                        colors: '#5E35B1'\n                    }\n                },\n                title: {\n                    text: 'MB copiados',\n                    style: {\n                        color: '#5E35B1'\n                    }\n                },\n                tooltip: {\n                    enabled: true\n                }\n            },\n            {\n                seriesName: 'GB',\n                opposite: true,\n                axisTicks: {\n                    show: true\n                },\n                axisBorder: {\n                    show: true,\n                    color: '#FB732A'\n                },\n                labels: {\n                    style: {\n                        colors: '#FB732A'\n                    }\n                },\n                title: {\n                    text: 'GB copiados',\n                    style: {\n                        color: '#FB732A'\n                    }\n                }\n            },\n            {\n                seriesName: '$',\n                opposite: true,\n                axisTicks: {\n                    show: true\n                },\n                axisBorder: {\n                    show: true,\n                    color: '#17C0AF'\n                },\n                labels: {\n                    style: {\n                        colors: '#17C0AF'\n                    }\n                },\n                title: {\n                    text: 'Dinero recaudado',\n                    style: {\n                        color: '#17C0AF'\n                    }\n                }\n            }\n        ],\n        tooltip: {\n            fixed: {\n                enabled: true,\n                position: 'topLeft', // topRight, topLeft, bottomRight, bottomLeft\n                offsetY: 30,\n                offsetX: 60\n            }\n        },\n        legend: {\n            horizontalAlign: 'center',\n            offsetX: 40\n        }\n    },\n    series: [\n        {\n            name: 'GB',\n            data: [45, 66, 41, 89, 25, 44, 9, 54]\n        }\n    ]\n};\n\nexport default chartData;\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\n\n// material-ui\nimport { styled } from '@mui/material/styles';\nimport { Box, Grid } from '@mui/material';\n// third-party\nimport Chart from 'react-apexcharts';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport SkeletonTotalOrderCard from 'ui-component/cards/Skeleton/EarningCard';\n\nimport ChartDataMonth from './chart-data/total-order-month-line-chart';\n\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\n    overflow: 'hidden',\n    position: 'relative',\n    '&:after': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: `linear-gradient(210.04deg, ${theme.palette.warning.dark} -50.94%, rgba(144, 202, 249, 0) 83.49%)`,\n        borderRadius: '50%',\n        top: -30,\n        right: -180\n    },\n    '&:before': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: `linear-gradient(140.9deg, ${theme.palette.warning.dark} -14.02%, rgba(144, 202, 249, 0) 70.50%)`,\n        borderRadius: '50%',\n        top: -160,\n        right: -130\n    }\n}));\n\n// ==============================|| DASHBOARD - TOTAL ORDER LINE CHART CARD ||============================== //\n\nconst TotalOrderLineChartCard = ({ isLoading }) => {\n    const [series, setSeries] = useState([]);\n    const Update = () => {\n        (async () => {\n            const url = `http://127.0.0.1:5323/api/status`;\n            const response = await fetch(url, {\n                headers: { 'Content-Type': 'application/json' }\n                // credentials: \"include\",\n            });\n            const result = await response.json();\n            if (response.status === 200) {\n                setSeries(result.series);\n            }\n        })();\n    };\n    useEffect(() => {\n        Update();\n    }, []);\n    setTimeout(() => {\n        Update();\n    }, 5000);\n    return (\n        <>\n            {isLoading ? (\n                <SkeletonTotalOrderCard />\n            ) : (\n                <CardWrapper border={false} content={false}>\n                    <Box sx={{ p: 2.25 }}>\n                        <Grid container direction=\"column\">\n                            <Grid item sx={{ mb: 0.75 }}>\n                                <Grid container alignItems=\"center\">\n                                    <Grid item xs={12}>\n                                        <Chart\n                                            type={ChartDataMonth.type}\n                                            options={ChartDataMonth.options}\n                                            height={ChartDataMonth.height}\n                                            series={series}\n                                        />\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </CardWrapper>\n            )}\n        </>\n    );\n};\n\nTotalOrderLineChartCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default TotalOrderLineChartCard;\n","import DataTable from 'react-data-table-component';\nimport { useEffect, useState } from 'react';\n// A super simple expandable component.\nconst ExpandedComponent = ({ data }) => <pre>{JSON.stringify(data, null, 2)}</pre>;\n\nconst columns = [\n    {\n        name: 'USB',\n        selector: (row) => row.path\n    },\n    {\n        name: 'Copia',\n        selector: (row) => row.copy\n    }\n];\n\n// const data = [\n//     {\n//         id: 1,\n//         title: 'Beetlejuice',\n//         year: '1988'\n//     },\n//     {\n//         id: 2,\n//         title: 'Ghostbusters',\n//         year: '1984'\n//     }\n// ];\n\nexport default function Table() {\n    const [online, setOnline] = useState([]);\n    const Update = () => {\n        (async () => {\n            const url = `http://127.0.0.1:5323/api/status`;\n            const response = await fetch(url, {\n                headers: { 'Content-Type': 'application/json' }\n                // credentials: \"include\",\n            });\n            const result = await response.json();\n            if (response.status === 200) {\n                if (result.online !== null) {\n                    setOnline(result.online);\n                } else {\n                    setOnline([]);\n                }\n            }\n        })();\n    };\n    useEffect(() => {\n        Update();\n    }, []);\n    setTimeout(() => {\n        Update();\n    }, 25000);\n    return <DataTable columns={columns} data={online} expandableRows expandableRowsComponent={ExpandedComponent} />;\n}\n","// material-ui\nimport { Card, List, ListItem, ListItemAvatar, ListItemText, Skeleton } from '@mui/material';\n\n// ==============================|| SKELETON - TOTAL INCOME DARK/LIGHT CARD ||============================== //\n\nconst TotalIncomeCard = () => (\n    <Card sx={{ p: 2 }}>\n        <List sx={{ py: 0 }}>\n            <ListItem alignItems=\"center\" disableGutters sx={{ py: 0 }}>\n                <ListItemAvatar>\n                    <Skeleton variant=\"rectangular\" width={44} height={44} />\n                </ListItemAvatar>\n                <ListItemText\n                    sx={{ py: 0 }}\n                    primary={<Skeleton variant=\"rectangular\" height={20} />}\n                    secondary={<Skeleton variant=\"text\" />}\n                />\n            </ListItem>\n        </List>\n    </Card>\n);\n\nexport default TotalIncomeCard;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { styled, useTheme } from '@mui/material/styles';\nimport { Avatar, Box, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@mui/material';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport TotalIncomeCard from 'ui-component/cards/Skeleton/TotalIncomeCard';\n\n// assets\nimport TableChartOutlinedIcon from '@mui/icons-material/Check';\n\n// styles\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\n    overflow: 'hidden',\n    position: 'relative',\n    '&:after': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: `linear-gradient(210.04deg, ${theme.palette.primary.dark} -50.94%, rgba(144, 202, 249, 0) 83.49%)`,\n        borderRadius: '50%',\n        top: -30,\n        right: -180\n    },\n    '&:before': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: `linear-gradient(140.9deg, ${theme.palette.primary.dark} -14.02%, rgba(144, 202, 249, 0) 70.50%)`,\n        borderRadius: '50%',\n        top: -160,\n        right: -130\n    }\n}));\n\n// ==============================|| DASHBOARD - TOTAL INCOME DARK CARD ||============================== //\n\nconst TotalIncomeDarkCard = ({ isLoading, text, amount }) => {\n    const theme = useTheme();\n\n    return (\n        <>\n            {isLoading ? (\n                <TotalIncomeCard />\n            ) : (\n                <CardWrapper border={false} content={false}>\n                    <Box sx={{ p: 2 }}>\n                        <List sx={{ py: 0 }}>\n                            <ListItem alignItems=\"center\" disableGutters sx={{ py: 0 }}>\n                                <ListItemAvatar>\n                                    <Avatar\n                                        variant=\"rounded\"\n                                        sx={{\n                                            ...theme.typography.commonAvatar,\n                                            ...theme.typography.largeAvatar,\n                                            backgroundColor: theme.palette.primary[800],\n                                            color: '#fff'\n                                        }}\n                                    >\n                                        <TableChartOutlinedIcon fontSize=\"inherit\" />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText\n                                    sx={{\n                                        py: 0,\n                                        mt: 0.45,\n                                        mb: 0.45\n                                    }}\n                                    primary={<Typography variant=\"h4\">{amount}</Typography>}\n                                    secondary={\n                                        <Typography variant=\"subtitle2\" sx={{ color: theme.palette.grey[500], mt: 0.25 }}>\n                                            {text}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        </List>\n                    </Box>\n                </CardWrapper>\n            )}\n        </>\n    );\n};\n\nTotalIncomeDarkCard.propTypes = {\n    isLoading: PropTypes.bool,\n    text: PropTypes.string,\n    amount: PropTypes.number\n};\n\nexport default TotalIncomeDarkCard;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Avatar, Box, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@mui/material';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport TotalIncomeCard from 'ui-component/cards/Skeleton/TotalIncomeCard';\n\n// assets\nimport StorefrontTwoToneIcon from '@mui/icons-material/StorefrontTwoTone';\n\n// styles\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\n    overflow: 'hidden',\n    position: 'relative',\n    '&:after': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: `linear-gradient(210.04deg, ${theme.palette.warning.dark} -50.94%, rgba(144, 202, 249, 0) 83.49%)`,\n        borderRadius: '50%',\n        top: -30,\n        right: -180\n    },\n    '&:before': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: `linear-gradient(140.9deg, ${theme.palette.warning.dark} -14.02%, rgba(144, 202, 249, 0) 70.50%)`,\n        borderRadius: '50%',\n        top: -160,\n        right: -130\n    }\n}));\n\n// ==============================|| DASHBOARD - TOTAL INCOME LIGHT CARD ||============================== //\n\nconst TotalIncomeLightCard = ({ isLoading, text, amount }) => {\n    const theme = useTheme();\n\n    return (\n        <>\n            {isLoading ? (\n                <TotalIncomeCard />\n            ) : (\n                <CardWrapper border={false} content={false}>\n                    <Box sx={{ p: 2 }}>\n                        <List sx={{ py: 0 }}>\n                            <ListItem alignItems=\"center\" disableGutters sx={{ py: 0 }}>\n                                <ListItemAvatar>\n                                    <Avatar\n                                        variant=\"rounded\"\n                                        sx={{\n                                            ...theme.typography.commonAvatar,\n                                            ...theme.typography.largeAvatar,\n                                            backgroundColor: theme.palette.warning.light,\n                                            color: theme.palette.warning.dark\n                                        }}\n                                    >\n                                        <StorefrontTwoToneIcon fontSize=\"inherit\" />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText\n                                    sx={{\n                                        py: 0,\n                                        mt: 0.45,\n                                        mb: 0.45\n                                    }}\n                                    primary={<Typography variant=\"h4\">${`${Math.round(amount)}`}</Typography>}\n                                    secondary={\n                                        <Typography\n                                            variant=\"subtitle2\"\n                                            sx={{\n                                                color: theme.palette.grey[500],\n                                                mt: 0.5\n                                            }}\n                                        >\n                                            {text}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        </List>\n                    </Box>\n                </CardWrapper>\n            )}\n        </>\n    );\n};\n\nTotalIncomeLightCard.propTypes = {\n    isLoading: PropTypes.bool,\n    text: PropTypes.string,\n    amount: PropTypes.number\n};\n\nexport default TotalIncomeLightCard;\n","import { useEffect, useState } from 'react';\n\n// material-ui\nimport { Grid } from '@mui/material';\n// import { TerminalContextProvider } from 'react-terminal';\n// project imports\n// import EarningCard from './EarningCard';\n// import PopularCard from './PopularCard';\nimport TotalOrderLineChartCard from './TotalOrderLineChartCard';\n// import Tree from './Tree';\n// import Terminal from './Terminal';\nimport Table from './Table';\nimport TotalIncomeDarkCard from './TotalIncomeDarkCard';\nimport TotalIncomeLightCard from './TotalIncomeLightCard';\n// import TotalGrowthBarChart from './TotalGrowthBarChart';\nimport { gridSpacing } from 'store/constant';\n\n// ==============================|| DEFAULT DASHBOARD ||============================== //\n\nconst Dashboard = () => {\n    const [isLoading, setLoading] = useState(true);\n    const [today, setToday] = useState([]);\n\n    const Update = () => {\n        (async () => {\n            const url = `http://127.0.0.1:5323/api/status`;\n            const response = await fetch(url, {\n                headers: { 'Content-Type': 'application/json' }\n                // credentials: \"include\",\n            });\n            const result = await response.json();\n            if (response.status === 200) {\n                setToday(result.today);\n            }\n        })();\n    };\n    useEffect(() => {\n        setLoading(false);\n        Update();\n    }, []);\n    setTimeout(() => {\n        Update();\n    }, 5000);\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12}>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item lg={12} md={12} sm={12} xs={12}>\n                        <Grid container spacing={gridSpacing}>\n                            <Grid item sm={12} xs={12} md={3} lg={3}>\n                                <TotalIncomeDarkCard isLoading={isLoading} text=\"Dispositivos conectados hoy\" amount={today.Connected} />\n                            </Grid>\n                            <Grid item sm={12} xs={12} md={3} lg={3}>\n                                <TotalIncomeDarkCard isLoading={isLoading} text=\"Gb copiados hoy\" amount={today.CopiedGB} />\n                            </Grid>\n                            <Grid item sm={12} xs={12} md={3} lg={3}>\n                                <TotalIncomeDarkCard isLoading={isLoading} text=\"Mb copiados hoy\" amount={today.CopiedMB} />\n                            </Grid>\n                            <Grid item sm={12} xs={12} md={3} lg={3}>\n                                <TotalIncomeLightCard isLoading={isLoading} text=\"Dinero recaudado\" amount={today.CopiedGB * 5} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <TotalOrderLineChartCard isLoading={isLoading} />\n                <br />\n                <Table />\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Dashboard;\n"],"names":["headerSX","mr","MainCard","forwardRef","ref","border","boxShadow","children","content","contentClass","contentSX","darkTitle","secondary","shadow","sx","title","others","theme","useTheme","borderColor","palette","primary","action","variant","className","Card","CardContent","Grid","container","direction","item","justifyContent","Skeleton","width","height","my","type","options","dataLabels","enabled","stroke","text","align","offsetX","colors","xaxis","categories","yaxis","axisTicks","show","axisBorder","color","labels","style","tooltip","seriesName","opposite","fixed","position","offsetY","legend","horizontalAlign","series","name","data","CardWrapper","styled","overflow","background","warning","dark","borderRadius","top","right","isLoading","setSeries","useState","Update","response","fetch","headers","result","json","status","useEffect","setTimeout","Box","p","mb","alignItems","xs","ChartDataMonth","ExpandedComponent","JSON","stringify","columns","selector","row","path","copy","Table","online","setOnline","expandableRows","expandableRowsComponent","List","py","ListItem","disableGutters","ListItemAvatar","ListItemText","amount","Avatar","typography","commonAvatar","largeAvatar","backgroundColor","fontSize","mt","Typography","grey","light","StorefrontTwoTone","Math","round","setLoading","today","setToday","spacing","gridSpacing","lg","md","sm","Connected","CopiedGB","CopiedMB"],"sourceRoot":""}